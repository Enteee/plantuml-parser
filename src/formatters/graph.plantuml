@startuml

/'
 ' Edges
 '/

class has << (E,#FF0000) >> {
}

class extends << (E,#FF0000) >> {
}
note top
  Entity --|> Entity
end note

class exposes << (E,#FF0000) >> {
  implementation
  availability
}
note left
  Component -- Interface: ...
  Interface -- Component: ...
end note

class consumes << (E,#FF0000) >> {
  direction
  method
  frequency
  serviceAccount
  criticality
}
note right
  Interface ..> Component: direction = Out, ...
  Interface <.. Component: direction = In, ...

  Component ..> Interface: direction = In, ...
  Component <.. Interface: direction = Out, ...
end note

class contains << (E,#FF0000) >> {
}

/'
 ' Nodes
 '/

abstract class UMLElement {
  name
  description
}

abstract class Entity {
}
Entity --|> UMLElement
Entity -- Entity
(Entity, Entity) .. extends
Entity -- Attribute
(Entity, Attribute) .. has

class Class << (N,#00FF00) >> {
  isAbstract
}
Class --|> Entity

class Interface << (N,#00FF00) >> {
}
Interface --|> Entity
Interface -- Component
(Interface, Component) .. exposes
Interface -- Component
(Interface, Component) .. consumes

class Attribute << (N,#00FF00) >> {
  type
  format
}
Attribute --|> UMLElement

class Component << (N,#00FF00) >> {
}
Component --|> UMLElement

class File << (N,#00FF00) >> {
  name
}
(File, UMLElement) .. contains

@enduml
